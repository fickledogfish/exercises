#!/usr/bin/env stack
-- stack script --resolver lts-13.26

{-
The sequence of triangle numbers is generated by adding the natural numbers. So
the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten
terms would be:

    1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

     1: 1
     3: 1,3
     6: 1,2,3,6
    10: 1,2,5,10
    15: 1,3,5,15
    21: 1,3,7,21
    28: 1,2,4,7,14,28

We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred
divisors?

Answer: 76576500
-}

module Main where

main :: IO ()
main = print
  $ fst
  $ find (\(n, ds) -> length ds > 500)
  $ map (\n -> (n, divisorsOf n))
  triangleNums

find :: (a -> Bool) -> [a] -> a
find pred (l:ls) = if pred l then l else find pred ls

divisorsOf :: Int -> [Int]
divisorsOf n =
  divs 1 []

  where
    divs i acc
      | i > round (sqrt (fromIntegral n)) =
          acc
      | n `mod` i == 0 =
          let d = n `div` i
          in
            divs (succ i) $ if d == i then i:acc else d:i:acc
      | otherwise =
          divs (succ i) acc

triangleNums :: [Int]
triangleNums = [sum [1..n] | n <- [1..]]
